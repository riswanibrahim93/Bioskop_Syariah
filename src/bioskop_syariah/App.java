/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bioskop_syariah;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int Kategori = 3;
    int Size = 10;
    int k0 = 1;
    int k1 = 1;
    int k2 = 1;

    int l0 = 0;
    int l1 = 0;
    int l2 = 0;

    int p0 = 0;
    int p1 = 0;
    int p2 = 0;

    int x = 0, y = 0;

    int nomor = 0;

    int loopA0 = 0;
    int loopA1 = 0;
    int loopA2 = 0;

    int loopB0 = 0;
    int loopB1 = 0;
    int loopB2 = 0;

    int loopC0 = 0;
    int loopC1 = 0;
    int loopC2 = 0;

    int pesanA0 = 0;

    int toReset = 0;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        Nama = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        FB = new javax.swing.JRadioButton();
        FC = new javax.swing.JRadioButton();
        FA = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        kategori = new javax.swing.JComboBox();
        Insert = new javax.swing.JButton();
        Bersihkan = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        HashA1 = new javax.swing.JTextField();
        HashB1 = new javax.swing.JTextField();
        HashB2 = new javax.swing.JTextField();
        HashB0 = new javax.swing.JTextField();
        HashA3 = new javax.swing.JTextField();
        HashA0 = new javax.swing.JTextField();
        HashA11 = new javax.swing.JTextField();
        HashA12 = new javax.swing.JTextField();
        HashA14 = new javax.swing.JTextField();
        HashA13 = new javax.swing.JTextField();
        HashA15 = new javax.swing.JTextField();
        HashA16 = new javax.swing.JTextField();
        HashA110 = new javax.swing.JTextField();
        HashA19 = new javax.swing.JTextField();
        HashA18 = new javax.swing.JTextField();
        HashA17 = new javax.swing.JTextField();
        HashA21 = new javax.swing.JTextField();
        HashA22 = new javax.swing.JTextField();
        HashA24 = new javax.swing.JTextField();
        HashA23 = new javax.swing.JTextField();
        HashA25 = new javax.swing.JTextField();
        HashA26 = new javax.swing.JTextField();
        HashA210 = new javax.swing.JTextField();
        HashA29 = new javax.swing.JTextField();
        HashA27 = new javax.swing.JTextField();
        HashA2 = new javax.swing.JTextField();
        HashA28 = new javax.swing.JTextField();
        HashA34 = new javax.swing.JTextField();
        HashA31 = new javax.swing.JTextField();
        HashA310 = new javax.swing.JTextField();
        HashA39 = new javax.swing.JTextField();
        HashA33 = new javax.swing.JTextField();
        HashA38 = new javax.swing.JTextField();
        HashA32 = new javax.swing.JTextField();
        HashA35 = new javax.swing.JTextField();
        HashA36 = new javax.swing.JTextField();
        HashA37 = new javax.swing.JTextField();
        HashB11 = new javax.swing.JTextField();
        HashB31 = new javax.swing.JTextField();
        HashB3 = new javax.swing.JTextField();
        HashB21 = new javax.swing.JTextField();
        HashB12 = new javax.swing.JTextField();
        HashB13 = new javax.swing.JTextField();
        HashB22 = new javax.swing.JTextField();
        HashB23 = new javax.swing.JTextField();
        HashB32 = new javax.swing.JTextField();
        HashB33 = new javax.swing.JTextField();
        HashB14 = new javax.swing.JTextField();
        HashB34 = new javax.swing.JTextField();
        HashB24 = new javax.swing.JTextField();
        HashB15 = new javax.swing.JTextField();
        HashB16 = new javax.swing.JTextField();
        HashB25 = new javax.swing.JTextField();
        HashB26 = new javax.swing.JTextField();
        HashB35 = new javax.swing.JTextField();
        HashB36 = new javax.swing.JTextField();
        HashB19 = new javax.swing.JTextField();
        HashB110 = new javax.swing.JTextField();
        HashB29 = new javax.swing.JTextField();
        HashB210 = new javax.swing.JTextField();
        HashB39 = new javax.swing.JTextField();
        HashB310 = new javax.swing.JTextField();
        HashB17 = new javax.swing.JTextField();
        HashB27 = new javax.swing.JTextField();
        HashB37 = new javax.swing.JTextField();
        HashB18 = new javax.swing.JTextField();
        HashB38 = new javax.swing.JTextField();
        HashB28 = new javax.swing.JTextField();
        HashC15 = new javax.swing.JTextField();
        HashC16 = new javax.swing.JTextField();
        HashC25 = new javax.swing.JTextField();
        HashC26 = new javax.swing.JTextField();
        HashC35 = new javax.swing.JTextField();
        HashC36 = new javax.swing.JTextField();
        HashC19 = new javax.swing.JTextField();
        HashC110 = new javax.swing.JTextField();
        HashC29 = new javax.swing.JTextField();
        HashC210 = new javax.swing.JTextField();
        HashC39 = new javax.swing.JTextField();
        HashC310 = new javax.swing.JTextField();
        HashC1 = new javax.swing.JTextField();
        HashC2 = new javax.swing.JTextField();
        HashC0 = new javax.swing.JTextField();
        HashC11 = new javax.swing.JTextField();
        HashC31 = new javax.swing.JTextField();
        HashC3 = new javax.swing.JTextField();
        HashC21 = new javax.swing.JTextField();
        HashC12 = new javax.swing.JTextField();
        HashC17 = new javax.swing.JTextField();
        HashC27 = new javax.swing.JTextField();
        HashC37 = new javax.swing.JTextField();
        HashC18 = new javax.swing.JTextField();
        HashC38 = new javax.swing.JTextField();
        HashC28 = new javax.swing.JTextField();
        HashC13 = new javax.swing.JTextField();
        HashC22 = new javax.swing.JTextField();
        HashC23 = new javax.swing.JTextField();
        HashC32 = new javax.swing.JTextField();
        HashC33 = new javax.swing.JTextField();
        HashC14 = new javax.swing.JTextField();
        HashC34 = new javax.swing.JTextField();
        HashC24 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tiket = new javax.swing.JEditorPane();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 51));
        jLabel5.setText("Nama");

        Nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setText("FILM");

        buttonGroup1.add(FB);
        FB.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FB.setForeground(new java.awt.Color(255, 255, 0));
        FB.setText("B");
        FB.setOpaque(false);
        FB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FBActionPerformed(evt);
            }
        });

        buttonGroup1.add(FC);
        FC.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FC.setForeground(new java.awt.Color(255, 255, 51));
        FC.setText("C");
        FC.setOpaque(false);

        buttonGroup1.add(FA);
        FA.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        FA.setForeground(new java.awt.Color(255, 255, 51));
        FA.setText("A");
        FA.setOpaque(false);
        FA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FAActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 51));
        jLabel2.setText("Kategori");

        kategori.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        kategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Keluarga", "Laki-laki", "Perempuan" }));

        Insert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Insert.setText("Insert");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        Bersihkan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Bersihkan.setText("Reset");
        Bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BersihkanActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 51));
        jLabel3.setText("Tiket");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bioskop_syariah/hell.jpg"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\Arduino\\avenger.jpg")); // NOI18N
        jLabel6.setText("jLabel6");

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\ASUS\\Documents\\Arduino\\marvel.jpg")); // NOI18N
        jLabel7.setText("jLabel7");

        HashB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB1ActionPerformed(evt);
            }
        });

        HashB0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB0ActionPerformed(evt);
            }
        });

        HashA0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashA0ActionPerformed(evt);
            }
        });

        HashA14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashA14ActionPerformed(evt);
            }
        });

        HashA15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashA15ActionPerformed(evt);
            }
        });

        HashA19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashA19ActionPerformed(evt);
            }
        });

        HashA29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashA29ActionPerformed(evt);
            }
        });

        HashA37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashA37ActionPerformed(evt);
            }
        });

        HashB15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB15ActionPerformed(evt);
            }
        });

        HashB16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB16ActionPerformed(evt);
            }
        });

        HashB35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB35ActionPerformed(evt);
            }
        });

        HashB19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB19ActionPerformed(evt);
            }
        });

        HashB110.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB110ActionPerformed(evt);
            }
        });

        HashB17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB17ActionPerformed(evt);
            }
        });

        HashB28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashB28ActionPerformed(evt);
            }
        });

        HashC15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC15ActionPerformed(evt);
            }
        });

        HashC16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC16ActionPerformed(evt);
            }
        });

        HashC110.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC110ActionPerformed(evt);
            }
        });

        HashC29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC29ActionPerformed(evt);
            }
        });

        HashC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC1ActionPerformed(evt);
            }
        });

        HashC0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC0ActionPerformed(evt);
            }
        });

        HashC17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashC17ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(tiket);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nama, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(FA)
                                .addGap(87, 87, 87)
                                .addComponent(FB)
                                .addGap(89, 89, 89)
                                .addComponent(FC)))
                        .addGap(70, 70, 70)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(Bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(kategori, 0, 336, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA0, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashA12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA14, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashA22, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA24, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA25, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA26, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA27, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA28, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA29, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA110, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA210, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA31, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashA32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA33, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA34, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA35, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashA36, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HashB0, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA37, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA38, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA39, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA310, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB110, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC31, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HashC22, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashC32, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC23, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC33, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC24, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC34, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(HashC15, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HashC25, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC35, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC26, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC36, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(HashC17, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HashC27, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC37, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(HashC18, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HashC28, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC38, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC19, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC29, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC39, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashC110, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC210, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashC310, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(HashC0, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB21, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB31, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB22, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB32, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB23, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB33, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB34, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB25, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB35, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashB26, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashB36, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB37, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HashB38, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB27, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HashB28, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(HashB39, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HashB29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(HashB210, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HashB310, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(220, 220, 220))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(284, 284, 284))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(Nama, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FA, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(FB, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(FC, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel8)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashA0, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HashA12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HashA22, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA23, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA24, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashA26, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashA1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(HashA2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashA11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(HashA21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashA17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(HashA27, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashA18, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(HashA28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashA19, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(HashA29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashA110, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(HashA210, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HashA3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA34, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA35, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA36, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA38, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA39, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HashA310, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(HashB1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(HashB11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(HashB0, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HashB12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashB13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashB14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashB15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashB16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(HashB17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(HashB18, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(HashB19, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashB110, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB22, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB23, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB24, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB34, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashB25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashB35, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(HashB26, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HashB27, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addComponent(HashB36, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(HashB29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(HashB210, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(HashB28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HashB37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(HashB310, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HashB39, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(HashB38, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(38, 38, 38)
                        .addComponent(HashC0, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HashC1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashC2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(HashC3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC22, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC23, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC24, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC34, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC35, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC26, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC36, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC27, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC37, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC18, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC28, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC38, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(HashC19, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC39, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(HashC110, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(HashC210, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(HashC310, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(430, 430, 430)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FBActionPerformed

    private void FAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FAActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:

        try {
            back();
            memilih(Kategori, Size);
            SetHash();
            nomor();
        } catch (IOException ex) {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_InsertActionPerformed

    private void BersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BersihkanActionPerformed
        // TODO add your handling code here:
        reset();
        kosong();
        try {
            SetHash();
        } catch (IOException ex) {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BersihkanActionPerformed

    private void HashB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB1ActionPerformed

    private void HashB0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB0ActionPerformed

    private void HashA0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashA0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashA0ActionPerformed

    private void HashA14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashA14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashA14ActionPerformed

    private void HashB16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB16ActionPerformed

    private void HashB110ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB110ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB110ActionPerformed

    private void HashB15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB15ActionPerformed

    private void HashB17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB17ActionPerformed

    private void HashC15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC15ActionPerformed

    private void HashC16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC16ActionPerformed

    private void HashC110ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC110ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC110ActionPerformed

    private void HashC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC1ActionPerformed

    private void HashC0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC0ActionPerformed

    private void HashC17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC17ActionPerformed

    private void NamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaActionPerformed

    private void HashA15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashA15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashA15ActionPerformed

    private void HashA19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashA19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashA19ActionPerformed

    private void HashA29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashA29ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashA29ActionPerformed

    private void HashA37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashA37ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashA37ActionPerformed

    private void HashB19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB19ActionPerformed

    private void HashB35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB35ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB35ActionPerformed

    private void HashC29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashC29ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashC29ActionPerformed

    private void HashB28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashB28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashB28ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    public void kosong() {
        tiket.setText("");
    }

    public void reset() {
        toReset = 1;
    }

    public void back() {
        toReset = 0;
    }

    public int kategoriG() {
        int key = -1;
        String n = (String) kategori.getSelectedItem();
        switch (n) {
            case "Keluarga":
                key = 0;
                break;
            case "Laki-laki":
                key = 1;
                break;
            case "Perempuan":
                key = 2;
                break;
        }
        return key;
    }

    public String kategoriFilm() {
        String a = "";
        if (FA.isSelected()) {
            a = "A";
        } else if (FB.isSelected()) {
            a = "B";
        } else if (FC.isSelected()) {
            a = "C";
        }
        return a;
    }

    public void nomor() throws IOException {
        Hashing theHash = new Hashing(Kategori, Size);
        String Gen = null;
        tiket.setText("Nama\t: " + Nama.getText() + "\nNo Film\t: " + kategoriFilm() + nomor);
    }

    //Menentukan nomor untuk dimasukkan pada kolom 
    public void memilih(int kategori, int size) throws IOException {
        Hashing theHash = new Hashing(Kategori, Size);

        String film = kategoriFilm();
        int key = kategoriG();
        switch (film) {
            case "A":
                if (key == 0) {
                    if (k0 == size + 1) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Hellboy full!");
//     System.out.println("kursi pada bioskop 0 full!");
                    } else {
                        nomor = key + k0 * kategori;
                        k0++;
                    }
                } else if (key == 1) {
                    if (l0 == size) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Hellboy full!");
//System.out.println("kursi pada bioskop 0 full!");
                    } else {
                        nomor = key + l0 * kategori;
                        l0++;
                    }
                } else if (key == 2) {
                    if (p0 == size) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Hellboy full!");
//System.out.println("kursi pada bioskop 0 full!");
                    } else {
                        nomor = key + p0 * kategori;
                        p0++;
                    }
                }
                break;
            case "B":
                if (key == 0) {
                    if (k1 == size + 1) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Avengers full!");
// System.out.println("kursi pada bioskop 1 full!");
                    } else {
                        nomor = key + k1 * kategori;
                        k1++;
                    }
                } else if (key == 1) {
                    if (l1 == size) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Avengers full!");
//  System.out.println("kursi pada bioskop 1 full!");
                    } else {
                        nomor = key + l1 * kategori;
                        l1++;
                    }
                } else if (key == 2) {
                    if (p1 == size) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Avengers full!");
                        //System.out.println("kursi pada bioskop 1 full!");
                    } else {
                        nomor = key + p1 * kategori;
                        p1++;
                    }
                }
                break;
            case "C":
                if (key == 0) {
                    if (k2 == size + 1) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Captain Marvel full!");
//  System.out.println("kursi pada bioskop 2 full!");
                    } else {
                        nomor = key + k2 * kategori;
                        k2++;
                    }
                } else if (key == 1) {
                    if (l2 == size) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Captain Marvel full!");
//System.out.println("kursi pada bioskop 2 full!");
                    } else {
                        nomor = key + l2 * kategori;
                        l2++;
                    }
                } else if (key == 2) {
                    if (p2 == size) {
                        JOptionPane.showMessageDialog(null, "kursi pada bioskop Captain Marvel full!");
//System.out.println("kursi pada bioskop 2 full!");
                    } else {
                        nomor = key + p2 * kategori;
                        p2++;
                    }
                }
                break;
        }
    }

    public void SetHash() throws IOException {

        Hashing theHash = new Hashing(Kategori, Size);

        if (toReset == 1) {
            for (int i = 0; i < Kategori; i++) {
                for (int j = 0; j < Size; j++) {
                    theHash.hashArr0[i].Arr[j] = 0;
                    theHash.hashArr1[i].Arr[j] = 0;
                    theHash.hashArr2[i].Arr[j] = 0;
                }
            }
            nomor = 0;

            loopA0 = 0;
            loopA1 = 0;
            loopA2 = 0;

            loopB0 = 0;
            loopB1 = 0;
            loopB2 = 0;

            loopC0 = 0;
            loopC1 = 0;
            loopC2 = 0;

            k0 = 1;
            k1 = 1;
            k2 = 1;

            l0 = 0;
            l1 = 0;
            l2 = 0;

            p0 = 0;
            p1 = 0;
            p2 = 0;

        } else {
            HashA0.setText("Tabel Hashing Film A");
            for (int i = 0; i < Kategori; i++) {
                if (i == 0) {
                    HashA1.setText("Keluarga\t: \n");
                } else if (i == 1) {
                    HashA2.setText("Laki-laki\t: \n");
                } else if (i == 2) {
                    HashA3.setText("Perampuan\t: \n");
                }
            }
            HashB0.setText("Tabel Hashing Film B");
            for (int i = 0; i < Kategori; i++) {
                if (i == 0) {
                    HashB1.setText("Keluarga\t: \n");
                } else if (i == 1) {
                    HashB2.setText("Laki-laki\t: \n");
                } else if (i == 2) {
                    HashB3.setText("Perampuan\t: \n");
                }
            }
            HashC0.setText("Tabel Hashing Film C");
            for (int i = 0; i < Kategori; i++) {
                if (i == 0) {
                    HashC1.setText("Keluarga\t: \n");
                } else if (i == 1) {
                    HashC2.setText("Laki-laki\t: \n");
                } else if (i == 2) {
                    HashC3.setText("Perampuan\t: \n");
                }
            }
            //Insert HashTabel Kategori A
            if (kategoriFilm() == "A") {
                //insert untuk kategori keluarga film A
                if (kategoriG() == 0) {
//                if(booking.getText()!=""){
//                   for (int i = 0; i < pesanA0; i++) {
//                    int pesan = Integer.parseInt(booking.getText());
//                    pesan*=3;
//                    theHash.insertHash(pesan, theHash.hashArr0);
//                    } 
//                }
                    loopA0 = nomor / Kategori;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }

                    //insert untuk kategori laki-laki film A
                } else if (kategoriG() == 1) {
                    loopA1 = nomor / Kategori + 1;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                    //insert untuk kategori perempuan film A
                } else if (kategoriG() == 2) {
                    loopA2 = nomor / Kategori + 1;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                }
            } //Insert HashTabel Kategori B
            else if (kategoriFilm() == "B") {
                //insert untuk kategori keluarga film B
                if (kategoriG() == 0) {
                    loopB0 = nomor / Kategori;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                    //insert untuk kategori laki-laki film B
                } else if (kategoriG() == 1) {
                    loopB1 = nomor / Kategori + 1;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                    //insert untuk kategori perempuan film B
                } else if (kategoriG() == 2) {
                    loopB2 = nomor / Kategori + 1;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                }
            } //Insert HashTabel Kategori C
            else if (kategoriFilm() == "C") {
                //insert untuk kategori keluarga film C
                if (kategoriG() == 0) {
                    loopC0 = nomor / Kategori;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                    //insert untuk kategori laki-laki film C
                } else if (kategoriG() == 1) {
                    loopC1 = nomor / Kategori + 1;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                    //insert untuk kategori perempuan film C
                } else if (kategoriG() == 2) {
                    loopC2 = nomor / Kategori + 1;
                    // perulangan untuk tetap menampilkan insert kategori keluarga film A
                    for (int i = 1; i < loopA0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film A
                    for (int i = 0; i < loopA1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film A
                    for (int i = 0; i < loopA2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr0);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film B
                    for (int i = 1; i < loopB0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film B
                    for (int i = 0; i < loopB1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film B
                    for (int i = 0; i < loopB2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr1);
                    }
                    // perulangan untuk tetap menampilkan insert kategori keluarga film C
                    for (int i = 1; i < loopC0 + 1; i++) {
                        theHash.insertHash(i * Kategori, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori laki-laki film C
                    for (int i = 0; i < loopC1; i++) {
                        theHash.insertHash(i * Kategori + 1, theHash.hashArr2);
                    }
                    // perulangan untuk tetap menampilkan insert kategori perempuan film C
                    for (int i = 0; i < loopC2; i++) {
                        theHash.insertHash(i * Kategori + 2, theHash.hashArr2);
                    }
                }
            }

        }
        //HashTabel A
        int i = 0, j = 0;
        //HashTabel A kategori Keluarga
        HashA11.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA12.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA13.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA14.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA15.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA16.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA17.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA18.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA19.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA110.setText(String.valueOf(theHash.hashArr0[i++].Arr(j++)));
        j = 0;
        //HashTabel A kategori Laki-laki
        HashA21.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA22.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA23.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA24.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA25.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA26.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA27.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA28.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA29.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA210.setText(String.valueOf(theHash.hashArr0[i++].Arr(j++)));
        j = 0;
        //HashTabel A kategori Perempuan
        HashA31.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA32.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA33.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA34.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA35.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA36.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA37.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA38.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA39.setText(String.valueOf(theHash.hashArr0[i].Arr(j++)));
        HashA310.setText(String.valueOf(theHash.hashArr0[i++].Arr(j++)));

        //HashTabel B
        i = 0;
        j = 0;
        //HashTabel B kategori Keluarga
        HashB11.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB12.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB13.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB14.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB15.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB16.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB17.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB18.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB19.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB110.setText(String.valueOf(theHash.hashArr1[i++].Arr(j++)));
        j = 0;
        //HashTabel B kategori Laki-laki
        HashB21.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB22.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB23.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB24.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB25.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB26.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB27.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB28.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB29.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB210.setText(String.valueOf(theHash.hashArr1[i++].Arr(j++)));
        j = 0;
        //HashTabel B kategori Perempuan
        HashB31.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB32.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB33.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB34.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB35.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB36.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB37.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB38.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB39.setText(String.valueOf(theHash.hashArr1[i].Arr(j++)));
        HashB310.setText(String.valueOf(theHash.hashArr1[i++].Arr(j++)));

        //HashTabel C
        i = 0;
        j = 0;
        //HashTabel C kategori Keluarga
        HashC11.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC12.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC13.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC14.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC15.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC16.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC17.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC18.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC19.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC110.setText(String.valueOf(theHash.hashArr2[i++].Arr(j++)));
        j = 0;
        //HashTabel C kategori Laki-laki
        HashC21.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC22.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC23.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC24.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC25.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC26.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC27.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC28.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC29.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC210.setText(String.valueOf(theHash.hashArr2[i++].Arr(j++)));
        j = 0;
        //HashTabel C kategori Perempuan
        HashC31.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC32.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC33.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC34.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC35.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC36.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC37.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC38.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC39.setText(String.valueOf(theHash.hashArr2[i].Arr(j++)));
        HashC310.setText(String.valueOf(theHash.hashArr2[i++].Arr(j++)));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bersihkan;
    private javax.swing.JRadioButton FA;
    private javax.swing.JRadioButton FB;
    private javax.swing.JRadioButton FC;
    private javax.swing.JTextField HashA0;
    private javax.swing.JTextField HashA1;
    private javax.swing.JTextField HashA11;
    private javax.swing.JTextField HashA110;
    private javax.swing.JTextField HashA12;
    private javax.swing.JTextField HashA13;
    private javax.swing.JTextField HashA14;
    private javax.swing.JTextField HashA15;
    private javax.swing.JTextField HashA16;
    private javax.swing.JTextField HashA17;
    private javax.swing.JTextField HashA18;
    private javax.swing.JTextField HashA19;
    private javax.swing.JTextField HashA2;
    private javax.swing.JTextField HashA21;
    private javax.swing.JTextField HashA210;
    private javax.swing.JTextField HashA22;
    private javax.swing.JTextField HashA23;
    private javax.swing.JTextField HashA24;
    private javax.swing.JTextField HashA25;
    private javax.swing.JTextField HashA26;
    private javax.swing.JTextField HashA27;
    private javax.swing.JTextField HashA28;
    private javax.swing.JTextField HashA29;
    private javax.swing.JTextField HashA3;
    private javax.swing.JTextField HashA31;
    private javax.swing.JTextField HashA310;
    private javax.swing.JTextField HashA32;
    private javax.swing.JTextField HashA33;
    private javax.swing.JTextField HashA34;
    private javax.swing.JTextField HashA35;
    private javax.swing.JTextField HashA36;
    private javax.swing.JTextField HashA37;
    private javax.swing.JTextField HashA38;
    private javax.swing.JTextField HashA39;
    private javax.swing.JTextField HashB0;
    private javax.swing.JTextField HashB1;
    private javax.swing.JTextField HashB11;
    private javax.swing.JTextField HashB110;
    private javax.swing.JTextField HashB12;
    private javax.swing.JTextField HashB13;
    private javax.swing.JTextField HashB14;
    private javax.swing.JTextField HashB15;
    private javax.swing.JTextField HashB16;
    private javax.swing.JTextField HashB17;
    private javax.swing.JTextField HashB18;
    private javax.swing.JTextField HashB19;
    private javax.swing.JTextField HashB2;
    private javax.swing.JTextField HashB21;
    private javax.swing.JTextField HashB210;
    private javax.swing.JTextField HashB22;
    private javax.swing.JTextField HashB23;
    private javax.swing.JTextField HashB24;
    private javax.swing.JTextField HashB25;
    private javax.swing.JTextField HashB26;
    private javax.swing.JTextField HashB27;
    private javax.swing.JTextField HashB28;
    private javax.swing.JTextField HashB29;
    private javax.swing.JTextField HashB3;
    private javax.swing.JTextField HashB31;
    private javax.swing.JTextField HashB310;
    private javax.swing.JTextField HashB32;
    private javax.swing.JTextField HashB33;
    private javax.swing.JTextField HashB34;
    private javax.swing.JTextField HashB35;
    private javax.swing.JTextField HashB36;
    private javax.swing.JTextField HashB37;
    private javax.swing.JTextField HashB38;
    private javax.swing.JTextField HashB39;
    private javax.swing.JTextField HashC0;
    private javax.swing.JTextField HashC1;
    private javax.swing.JTextField HashC11;
    private javax.swing.JTextField HashC110;
    private javax.swing.JTextField HashC12;
    private javax.swing.JTextField HashC13;
    private javax.swing.JTextField HashC14;
    private javax.swing.JTextField HashC15;
    private javax.swing.JTextField HashC16;
    private javax.swing.JTextField HashC17;
    private javax.swing.JTextField HashC18;
    private javax.swing.JTextField HashC19;
    private javax.swing.JTextField HashC2;
    private javax.swing.JTextField HashC21;
    private javax.swing.JTextField HashC210;
    private javax.swing.JTextField HashC22;
    private javax.swing.JTextField HashC23;
    private javax.swing.JTextField HashC24;
    private javax.swing.JTextField HashC25;
    private javax.swing.JTextField HashC26;
    private javax.swing.JTextField HashC27;
    private javax.swing.JTextField HashC28;
    private javax.swing.JTextField HashC29;
    private javax.swing.JTextField HashC3;
    private javax.swing.JTextField HashC31;
    private javax.swing.JTextField HashC310;
    private javax.swing.JTextField HashC32;
    private javax.swing.JTextField HashC33;
    private javax.swing.JTextField HashC34;
    private javax.swing.JTextField HashC35;
    private javax.swing.JTextField HashC36;
    private javax.swing.JTextField HashC37;
    private javax.swing.JTextField HashC38;
    private javax.swing.JTextField HashC39;
    private javax.swing.JButton Insert;
    private javax.swing.JTextField Nama;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox kategori;
    private javax.swing.JEditorPane tiket;
    // End of variables declaration//GEN-END:variables
}
